worker_processes  1;

events { worker_connections 1024; }

http {
  # ---- Upstreams ----
  upstream api_backend {
    server api:8000;   # single app port (API + /metrics lives here)
    keepalive 32;
  }

  # ---- Rate limiting ----
  limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=ws_limit:10m rate=5r/s;

  # ---- Logging ----
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  # ---- Gzip ----
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # ---- WebSocket upgrade helper ----
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # ====== HTTPS ONLY ======
  server {
    listen 443 ssl http2;
    server_name system80.rice.iit.edu;   # set to your DNS

    # ---- TLS certs (match your compose volume) ----
    ssl_certificate     /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # ---- Security headers ----
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # ---- Common proxy defaults ----
    proxy_read_timeout    120s;
    proxy_connect_timeout 5s;
    proxy_send_timeout    120s;

    # ---- API ----
    location /api/ {
      limit_req zone=api_limit burst=20 nodelay;

      proxy_pass http://api_backend;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
    }

    # ---- WebSockets ----
    location /ws/ {
      limit_req zone=ws_limit burst=10 nodelay;

      proxy_pass http://api_backend;
      proxy_http_version 1.1;
      proxy_set_header Upgrade    $http_upgrade;
      proxy_set_header Connection $connection_upgrade;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;

      proxy_read_timeout 7d;
      proxy_send_timeout 7d;
    }

    # ---- Health ----
    location /health {
      proxy_pass http://api_backend;
      proxy_set_header Host $host;
      access_log off;
    }

    # ---- Metrics (restricted) ----
    # If your app exposes /metrics on 8000 (your test script does),
    # this proxies it securely via 443 and restricts to RFC1918 + loopback.
    location /metrics {
      allow 127.0.0.1;
      allow 10.0.0.0/8;
      allow 172.16.0.0/12;
      allow 192.168.0.0/16;
      deny all;

      proxy_pass http://api_backend;
      proxy_set_header Host $host;
    }

    # ---- Static (optional) ----
    location /static/ {
      alias /var/www/static/;
      expires 1y;
      add_header Cache-Control "public, immutable";
    }

    # ---- Default ----
    location / {
      default_type application/json;
      return 200 '{"message":"Ocean Plastic Forecast API","status":"running"}';
    }
  }
}


    # HTTPS server (uncomment and configure SSL certificates)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #
    #     # Same location blocks as HTTP server
    #     location /api/ {
    #         limit_req zone=api_limit burst=20 nodelay;
    #         proxy_pass http://api_backend;
    #         # ... other proxy settings
    #     }
    #
    #     # ... other locations
    # }
}
